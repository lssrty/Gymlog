package sali.test;
// Generated by ComTest BEGIN
import java.io.File;
import sali.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.03.07 15:45:13 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class HarjoituksetTest {



  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta72 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta72() throws SailoException {    // Harjoitukset: 72
    Harjoitukset treenit = new Harjoitukset(); 
    Harjoitus reeni21 = new Harjoitus(); reeni21.rekisteroi(); 
    Harjoitus reeni11 = new Harjoitus(); reeni11.rekisteroi(); 
    Harjoitus reeni22 = new Harjoitus(); reeni22.rekisteroi(); 
    Harjoitus reeni12 = new Harjoitus(); reeni12.rekisteroi(); 
    Harjoitus reeni23 = new Harjoitus(); reeni23.rekisteroi(); 
    String tiedNimi = "testiharjoitukset"; 
    File ftied = new File(tiedNimi+".dat"); 
    ftied.delete(); 
    try {
    treenit.lueTiedostosta(tiedNimi); 
    fail("Harjoitukset: 84 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    treenit.lisaa(reeni21); 
    treenit.lisaa(reeni11); 
    treenit.lisaa(reeni22); 
    treenit.lisaa(reeni12); 
    treenit.lisaa(reeni23); 
    treenit.tallenna(); 
    treenit = new Harjoitukset(); 
    treenit.lueTiedostosta(tiedNimi); 
    Iterator<Harjoitus> i = treenit.iterator(); 
    assertEquals("From: Harjoitukset line: 94", reeni21.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 95", reeni11.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 96", reeni22.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 97", reeni12.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 98", reeni23.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 99", false, i.hasNext()); 
    treenit.lisaa(reeni23); 
    treenit.tallenna(); 
    assertEquals("From: Harjoitukset line: 102", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Harjoitukset line: 104", true, fbak.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator214 */
  @Test
  public void testIterator214() {    // Harjoitukset: 214
    Harjoitukset treenit = new Harjoitukset(); 
    Harjoitus reeni1 = new Harjoitus(); treenit.lisaa(reeni1); 
    Harjoitus reeni2 = new Harjoitus(); treenit.lisaa(reeni2); 
    Harjoitus reeni3 = new Harjoitus(); treenit.lisaa(reeni3); 
    Harjoitus reeni4 = new Harjoitus(); treenit.lisaa(reeni4); 
    Harjoitus reeni5 = new Harjoitus(); treenit.lisaa(reeni5); 
    Iterator<Harjoitus> i2=treenit.iterator(); 
    assertEquals("From: Harjoitukset line: 226", reeni1, i2.next()); 
    assertEquals("From: Harjoitukset line: 227", reeni2, i2.next()); 
    assertEquals("From: Harjoitukset line: 228", reeni3, i2.next()); 
    assertEquals("From: Harjoitukset line: 229", reeni4, i2.next()); 
    assertEquals("From: Harjoitukset line: 230", reeni5, i2.next()); 
    try {
    assertEquals("From: Harjoitukset line: 231", reeni3, i2.next()); 
    fail("Harjoitukset: 231 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaHarjoitukset244 */
  @Test
  public void testAnnaHarjoitukset244() {    // Harjoitukset: 244
    Harjoitukset treenit = new Harjoitukset(); 
    Harjoitus reeni1 = new Harjoitus(); treenit.lisaa(reeni1); 
    Harjoitus reeni2 = new Harjoitus(); treenit.lisaa(reeni2); 
    Harjoitus reeni3 = new Harjoitus(); treenit.lisaa(reeni3); 
    Harjoitus reeni4 = new Harjoitus(); treenit.lisaa(reeni4); 
    Harjoitus reeni5 = new Harjoitus(); treenit.lisaa(reeni5); 
    List<Harjoitus> loytyneet; 
    loytyneet = treenit.annaHarjoitukset(); 
    assertEquals("From: Harjoitukset line: 256", 5, loytyneet.size()); 
    assertEquals("From: Harjoitukset line: 257", true, loytyneet.get(0) == reeni1); 
    assertEquals("From: Harjoitukset line: 258", true, loytyneet.get(3) == reeni4); 
  } // Generated by ComTest END
}