package sali.test;
// Generated by ComTest BEGIN
import java.io.File;
import sali.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.03.27 16:11:10 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class HarjoituksetTest {



  // Generated by ComTest BEGIN
  /** 
   * testPoista71 
   * @throws SailoException when error
   */
  @Test
  public void testPoista71() throws SailoException {    // Harjoitukset: 71
    Harjoitukset treenit = new Harjoitukset(); 
    Harjoitus reeni21 = new Harjoitus(); reeni21.rekisteroi(); 
    Harjoitus reeni11 = new Harjoitus(); reeni11.rekisteroi(); 
    Harjoitus reeni22 = new Harjoitus(); reeni22.rekisteroi(); 
    Harjoitus reeni12 = new Harjoitus(); reeni12.rekisteroi(); 
    Harjoitus reeni23 = new Harjoitus(); reeni23.rekisteroi(); 
    treenit.lisaa(reeni21); 
    treenit.lisaa(reeni11); 
    treenit.lisaa(reeni22); 
    treenit.lisaa(reeni12); 
    assertEquals("From: Harjoitukset line: 84", false, treenit.poista(reeni23)); assertEquals("From: Harjoitukset line: 84", 4, treenit.getLkm()); 
    assertEquals("From: Harjoitukset line: 85", true, treenit.poista(reeni11)); assertEquals("From: Harjoitukset line: 85", 3, treenit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta101 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta101() throws SailoException {    // Harjoitukset: 101
    Harjoitukset treenit = new Harjoitukset(); 
    Harjoitus reeni21 = new Harjoitus(); reeni21.rekisteroi(); 
    Harjoitus reeni11 = new Harjoitus(); reeni11.rekisteroi(); 
    Harjoitus reeni22 = new Harjoitus(); reeni22.rekisteroi(); 
    Harjoitus reeni12 = new Harjoitus(); reeni12.rekisteroi(); 
    Harjoitus reeni23 = new Harjoitus(); reeni23.rekisteroi(); 
    String tiedNimi = "testiharjoitukset"; 
    File ftied = new File(tiedNimi+".dat"); 
    ftied.delete(); 
    try {
    treenit.lueTiedostosta(tiedNimi); 
    fail("Harjoitukset: 113 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    treenit.lisaa(reeni21); 
    treenit.lisaa(reeni11); 
    treenit.lisaa(reeni22); 
    treenit.lisaa(reeni12); 
    treenit.lisaa(reeni23); 
    treenit.tallenna(); 
    treenit = new Harjoitukset(); 
    treenit.lueTiedostosta(tiedNimi); 
    Iterator<Harjoitus> i = treenit.iterator(); 
    assertEquals("From: Harjoitukset line: 123", reeni21.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 124", reeni11.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 125", reeni22.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 126", reeni12.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 127", reeni23.toString(), i.next().toString()); 
    assertEquals("From: Harjoitukset line: 128", false, i.hasNext()); 
    treenit.lisaa(reeni23); 
    treenit.tallenna(); 
    assertEquals("From: Harjoitukset line: 131", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Harjoitukset line: 133", true, fbak.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator243 */
  @Test
  public void testIterator243() {    // Harjoitukset: 243
    Harjoitukset treenit = new Harjoitukset(); 
    Harjoitus reeni1 = new Harjoitus(); treenit.lisaa(reeni1); 
    Harjoitus reeni2 = new Harjoitus(); treenit.lisaa(reeni2); 
    Harjoitus reeni3 = new Harjoitus(); treenit.lisaa(reeni3); 
    Harjoitus reeni4 = new Harjoitus(); treenit.lisaa(reeni4); 
    Harjoitus reeni5 = new Harjoitus(); treenit.lisaa(reeni5); 
    Iterator<Harjoitus> i2=treenit.iterator(); 
    assertEquals("From: Harjoitukset line: 255", reeni1, i2.next()); 
    assertEquals("From: Harjoitukset line: 256", reeni2, i2.next()); 
    assertEquals("From: Harjoitukset line: 257", reeni3, i2.next()); 
    assertEquals("From: Harjoitukset line: 258", reeni4, i2.next()); 
    assertEquals("From: Harjoitukset line: 259", reeni5, i2.next()); 
    try {
    assertEquals("From: Harjoitukset line: 260", reeni3, i2.next()); 
    fail("Harjoitukset: 260 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaHarjoitukset273 */
  @Test
  public void testAnnaHarjoitukset273() {    // Harjoitukset: 273
    Harjoitukset treenit = new Harjoitukset(); 
    Harjoitus reeni1 = new Harjoitus(); treenit.lisaa(reeni1); 
    Harjoitus reeni2 = new Harjoitus(); treenit.lisaa(reeni2); 
    Harjoitus reeni3 = new Harjoitus(); treenit.lisaa(reeni3); 
    Harjoitus reeni4 = new Harjoitus(); treenit.lisaa(reeni4); 
    Harjoitus reeni5 = new Harjoitus(); treenit.lisaa(reeni5); 
    List<Harjoitus> loytyneet; 
    loytyneet = treenit.annaHarjoitukset(); 
    assertEquals("From: Harjoitukset line: 285", 5, loytyneet.size()); 
    assertEquals("From: Harjoitukset line: 286", true, loytyneet.get(0) == reeni1); 
    assertEquals("From: Harjoitukset line: 287", true, loytyneet.get(3) == reeni4); 
  } // Generated by ComTest END
}