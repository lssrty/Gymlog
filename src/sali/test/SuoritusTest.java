package sali.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import sali.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.03.07 15:36:44 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class SuoritusTest {



  // Generated by ComTest BEGIN
  /** testGetHarjoitusID73 */
  @Test
  public void testGetHarjoitusID73() {    // Suoritus: 73
    Suoritus kyykkysarja = new Suoritus(); 
    assertEquals("From: Suoritus line: 75", 0, kyykkysarja.getHarjoitusID()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetLiikeID86 */
  @Test
  public void testGetLiikeID86() {    // Suoritus: 86
    Suoritus kyykkysarja = new Suoritus(); 
    kyykkysarja.taytaKyykkyTiedoilla(); 
    assertEquals("From: Suoritus line: 89", 1, kyykkysarja.getLiikeID()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetSarjat100 */
  @Test
  public void testGetSarjat100() {    // Suoritus: 100
    Suoritus kyykkysarja = new Suoritus(); 
    kyykkysarja.taytaKyykkyTiedoilla(); 
    assertEquals("From: Suoritus line: 103", 3, kyykkysarja.getSarjat()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetToistot114 */
  @Test
  public void testGetToistot114() {    // Suoritus: 114
    Suoritus kyykkysarja = new Suoritus(); 
    kyykkysarja.taytaKyykkyTiedoilla(); 
    assertEquals("From: Suoritus line: 117", 5, kyykkysarja.getToistot()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetPainot128 */
  @Test
  public void testGetPainot128() {    // Suoritus: 128
    Suoritus kyykkysarja = new Suoritus(); 
    kyykkysarja.taytaKyykkyTiedoilla(); 
    assertEquals("From: Suoritus line: 131", 160, kyykkysarja.getPainot(), 0.000001); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetRasitus142 */
  @Test
  public void testGetRasitus142() {    // Suoritus: 142
    Suoritus kyykkysarja = new Suoritus(); 
    kyykkysarja.taytaKyykkyTiedoilla(); 
    assertEquals("From: Suoritus line: 145", 8, kyykkysarja.getRasitus(), 0.000001); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString165 */
  @Test
  public void testToString165() {    // Suoritus: 165
    Liike penkki = new Liike(); 
    penkki.parse("   2  |  penkki"); 
    assertEquals("From: Suoritus line: 168", "2|penkki", penkki.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse202 */
  @Test
  public void testParse202() {    // Suoritus: 202
    Suoritus kyykkysarja = new Suoritus(); 
    kyykkysarja.parse("   1  |  1  | 1  | 3 | 5 | 160.0 | 8.0 | Selkä kipeä"); 
    assertEquals("From: Suoritus line: 205", 1, kyykkysarja.getTunnusNro()); 
    assertEquals("From: Suoritus line: 206", "1|1|1|3|5|160.0|8.0|Selkä kipeä", kyykkysarja.toString()); 
    kyykkysarja.rekisteroi(); 
    int n = kyykkysarja.getTunnusNro(); 
    kyykkysarja.parse(""+(n+20));  // Otetaan merkkijonosta vain liikeID
    kyykkysarja.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Suoritus line: 212", n+20+1, kyykkysarja.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi285 */
  @Test
  public void testRekisteroi285() {    // Suoritus: 285
    Suoritus kyykkysarja1 = new Suoritus(); 
    assertEquals("From: Suoritus line: 287", 0, kyykkysarja1.getTunnusNro()); 
    kyykkysarja1.rekisteroi(); 
    Suoritus kyykkysarja2 = new Suoritus(); 
    kyykkysarja2.rekisteroi(); 
    int n1 = kyykkysarja1.getTunnusNro(); 
    int n2 = kyykkysarja2.getTunnusNro(); 
    assertEquals("From: Suoritus line: 293", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna327 */
  @Test
  public void testAnna327() {    // Suoritus: 327
    Suoritus kyykkysarja = new Suoritus(); 
    kyykkysarja.taytaKyykkyTiedoilla(); 
    assertEquals("From: Suoritus line: 330", "8.0", kyykkysarja.anna(4)); 
  } // Generated by ComTest END
}